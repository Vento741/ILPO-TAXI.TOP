#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞ —Å —Å–∞–π—Ç–æ–º
"""
import asyncio
import json
import logging
from telegram_bot.services.application_service import handle_new_application_from_site

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_application_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏"""
    test_data = {
        "fullName": "–¢–µ—Å—Ç–æ–≤ –¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤–∏—á",
        "phone": "+7 (999) 123-45-67",
        "age": "25",
        "city": "–¢–µ—Å—Ç-–≥–æ—Ä–æ–¥",
        "category": "driver",
        "experience": "5",
        "citizenship": "rf",
        "workStatus": "self_employed",
        "hasLicense": "on",
        "hasCar": "on",
        "carModel": "–¢–µ—Å—Ç-–∞–≤—Ç–æ",
        "hasDocuments": "on",
        "agreeTerms": "on",
        "agreeNewsletter": "on"
    }
    
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏...")
    logger.info(f"üìù –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {json.dumps(test_data, ensure_ascii=False, indent=2)}")
    
    try:
        result = await handle_new_application_from_site(test_data)
        if result:
            logger.info("‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω! –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram")
            return True
        else:
            logger.error("‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω! –ó–∞—è–≤–∫–∞ –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞")
            return False
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        logger.error(f"–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: {traceback.format_exc()}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")
    
    success = await test_application_creation()
    
    if success:
        logger.info("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        logger.error("üí• –¢–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ Telegram –±–æ—Ç–∞")

if __name__ == "__main__":
    asyncio.run(main()) 