"""
–ë–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ Telegram –±–æ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ILPO-TAXI
"""
import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from datetime import datetime

from telegram_bot.services.manager_service import manager_service
from telegram_bot.services.redis_service import redis_service
from telegram_bot.models.support_models import ManagerStatus, ApplicationStatus
from telegram_bot.config.settings import settings

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
base_router = Router()

class ManagerStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
    OFFLINE = State()
    ONLINE = State()
    BUSY = State()
    HANDLING_APPLICATION = State()
    HANDLING_CHAT = State()

# –ö–æ–º–∞–Ω–¥–∞ /start
@base_router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = message.from_user
    telegram_id = str(user.id)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
        manager = await manager_service.get_manager_by_telegram_id(telegram_id)
        
        if not manager:
            # –ï—Å–ª–∏ –Ω–µ –º–µ–Ω–µ–¥–∂–µ—Ä, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å
            if telegram_id in [str(uid) for uid in settings.MANAGER_IDS] or \
               telegram_id in [str(uid) for uid in settings.ADMIN_IDS]:
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
                is_admin = telegram_id in [str(uid) for uid in settings.ADMIN_IDS]
                manager = await manager_service.register_manager(
                    telegram_id=telegram_id,
                    username=user.username or "",
                    first_name=user.first_name,
                    last_name=user.last_name,
                    is_admin=is_admin
                )
                
                welcome_text = f"""
üéâ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ILPO-TAXI!**

–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ {'–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' if is_admin else '–º–µ–Ω–µ–¥–∂–µ—Ä'} –ø–æ–¥–¥–µ—Ä–∂–∫–∏.

**–í–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ —Å —Å–∞–π—Ç–∞
‚Ä¢ –û–±—â–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –≤ —á–∞—Ç–µ
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∞–±–æ—Ç—ã
‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å —Å—Ç–∞—Ç—É—Å–æ–º (–æ–Ω–ª–∞–π–Ω/–æ—Ñ–ª–∞–π–Ω)

**–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/online - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—á—É—é —Å–º–µ–Ω—É (—Å—Ç–∞—Ç—É—Å "–æ–Ω–ª–∞–π–Ω")
/offline - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—á—É—é —Å–º–µ–Ω—É
/stats - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
/help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –Ω–∞–∂–º–∏—Ç–µ /online
                """
                
                await message.answer(welcome_text, reply_markup=get_manager_main_keyboard(is_admin))
                await state.set_state(ManagerStates.OFFLINE)
                
            else:
                # –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                await message.answer(
                    "ü§ñ –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ILPO-TAXI –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤.\n\n"
                    "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É —Ç–∞–∫—Å–æ–ø–∞—Ä–∫—É, "
                    "–ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç: https://ilpo-taxi.top"
                )
                return
        else:
            # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä
            stats = await manager_service.get_manager_stats(telegram_id)
            status_emoji = {"online": "üü¢", "busy": "üü°", "offline": "üî¥"}.get(manager.status.value, "‚ö™")
            
            welcome_text = f"""
üëã **–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {manager.first_name}!**

{status_emoji} –°—Ç–∞—Ç—É—Å: {manager.status.value.upper()}
üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤: {stats['active_chats'] if stats else 0}/{manager.max_active_chats}
üìã –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {stats['total_applications'] if stats else 0}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
            """
            
            await message.answer(welcome_text, reply_markup=get_manager_main_keyboard(manager.is_admin))
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
            if manager.status == ManagerStatus.ONLINE:
                await state.set_state(ManagerStates.ONLINE)
            elif manager.status == ManagerStatus.BUSY:
                await state.set_state(ManagerStates.BUSY)
            else:
                await state.set_state(ManagerStates.OFFLINE)
    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –ö–æ–º–∞–Ω–¥–∞ /online
@base_router.message(Command("online"))
async def cmd_online(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ –æ–Ω–ª–∞–π–Ω"""
    user = message.from_user
    telegram_id = str(user.id)
    
    try:
        manager = await manager_service.get_manager_by_telegram_id(telegram_id)
        if not manager:
            await message.answer("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä.")
            return
        
        # –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—á—É—é —Å–µ—Å—Å–∏—é
        success = await manager_service.start_work_session(telegram_id)
        if success:
            await message.answer(
                f"üü¢ **–í—ã –≤ —Å–µ—Ç–∏!**\n\n"
                f"–ü—Ä–∏–≤–µ—Ç, {manager.first_name}! –í—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞—è–≤–∫–∏ –∏ —á–∞—Ç—ã.\n"
                f"–ú–∞–∫—Å–∏–º—É–º –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤: {manager.max_active_chats}\n\n"
                f"–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /offline",
                reply_markup=get_online_keyboard(manager.is_admin)
            )
            await state.set_state(ManagerStates.ONLINE)
        else:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –æ–Ω–ª–∞–π–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /online: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –ö–æ–º–∞–Ω–¥–∞ /offline
@base_router.message(Command("offline"))
async def cmd_offline(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ –æ—Ñ–ª–∞–π–Ω"""
    user = message.from_user
    telegram_id = str(user.id)
    
    try:
        manager = await manager_service.get_manager_by_telegram_id(telegram_id)
        if not manager:
            await message.answer("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä.")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
        active_chats = await redis_service.get_manager_active_chats(telegram_id)
        
        if active_chats:
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚úÖ –î–∞, –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É", callback_data="confirm_offline")],
                [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_offline")]
            ])
            
            await message.answer(
                f"‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ!**\n\n"
                f"–£ –≤–∞—Å –µ—Å—Ç—å {len(active_chats)} –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–∞(–æ–≤).\n"
                f"–ü—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–º–µ–Ω—ã –æ–Ω–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –¥—Ä—É–≥–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º.\n\n"
                f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É?",
                reply_markup=keyboard
            )
        else:
            # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–º–µ–Ω—É
            success = await manager_service.end_work_session(telegram_id)
            if success:
                await message.answer(
                    f"üî¥ **–°–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞**\n\n"
                    f"–î–æ –≤—Å—Ç—Ä–µ—á–∏, {manager.first_name}! üëã\n"
                    f"–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π —Å–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /online",
                    reply_markup=get_manager_main_keyboard(manager.is_admin)
                )
                await state.set_state(ManagerStates.OFFLINE)
            else:
                await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /offline: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –ö–æ–º–∞–Ω–¥–∞ /stats
@base_router.message(Command("stats"))
async def cmd_stats(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
    user = message.from_user
    telegram_id = str(user.id)
    
    try:
        manager = await manager_service.get_manager_by_telegram_id(telegram_id)
        if not manager:
            await message.answer("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä.")
            return
        
        stats = await manager_service.get_manager_stats(telegram_id)
        if not stats:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.")
            return
        
        status_emoji = {"online": "üü¢", "busy": "üü°", "offline": "üî¥"}.get(stats['status'], "‚ö™")
        
        stats_text = f"""
üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã**

üë§ **–ú–µ–Ω–µ–¥–∂–µ—Ä:** {stats['manager_name']}
{status_emoji} **–°—Ç–∞—Ç—É—Å:** {stats['status'].upper()}

üí¨ **–ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã:** {stats['active_chats']}/{stats['max_chats']}
üìã **–í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫:** {stats['total_applications']}
üìà **–ó–∞—è–≤–æ–∫ —Å–µ–≥–æ–¥–Ω—è:** {stats['today_applications']}

‚è±Ô∏è **–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞:** {stats['avg_response_time']}—Å
üïê **–ß–∞—Å–æ–≤ —Ä–∞–±–æ—Ç—ã –∑–∞ –Ω–µ–¥–µ–ª—é:** {stats['week_work_hours']}—á

üìÖ **–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:** {stats['last_seen'][:19] if stats['last_seen'] else '–ù–∏–∫–æ–≥–¥–∞'}
        """
        
        await message.answer(stats_text, reply_markup=get_stats_keyboard())
    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /stats: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")

# –ö–æ–º–∞–Ω–¥–∞ /help
@base_router.message(Command("help"))
async def cmd_help(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
    user = message.from_user
    telegram_id = str(user.id)
    
    manager = await manager_service.get_manager_by_telegram_id(telegram_id)
    if not manager:
        await message.answer("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä.")
        return
    
    help_text = """
üìñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º**

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/online - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—á—É—é —Å–º–µ–Ω—É
/offline - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—á—É—é —Å–º–µ–Ω—É
/stats - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

**–†–∞–±–æ—á–∏–µ –∫–æ–º–∞–Ω–¥—ã:**
/applications - –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫
/chats - –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
/status - –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å
    """
    
    if manager.is_admin:
        help_text += """
**–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:**
/admin - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
/managers - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏
/reports - –û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
        """
    
    help_text += """
**–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å:**
1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /online –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–º–µ–Ω—ã
2. –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
3. –û—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /offline –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–º–µ–Ω—ã

**–ü–æ–¥–¥–µ—Ä–∂–∫–∞:** –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    """
    
    await message.answer(help_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback –∫–Ω–æ–ø–æ–∫
@base_router.callback_query(F.data == "confirm_offline")
async def callback_confirm_offline(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–º–µ–Ω—ã"""
    user = callback.from_user
    telegram_id = str(user.id)
    
    try:
        manager = await manager_service.get_manager_by_telegram_id(telegram_id)
        success = await manager_service.end_work_session(telegram_id)
        
        if success:
            await callback.message.edit_text(
                f"üî¥ **–°–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞**\n\n"
                f"–î–æ –≤—Å—Ç—Ä–µ—á–∏, {manager.first_name}! üëã\n"
                f"–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π —Å–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /online",
                reply_markup=get_manager_main_keyboard(manager.is_admin)
            )
            await state.set_state(ManagerStates.OFFLINE)
        else:
            await callback.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É.")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ñ–ª–∞–π–Ω–∞: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")

@base_router.callback_query(F.data == "cancel_offline")
async def callback_cancel_offline(callback: CallbackQuery):
    """–û—Ç–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–º–µ–Ω—ã"""
    await callback.message.edit_text("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–º–µ–Ω—ã –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –æ—Å—Ç–∞–µ—Ç–µ—Å—å –æ–Ω–ª–∞–π–Ω.")

@base_router.callback_query(F.data == "refresh_stats")
async def callback_refresh_stats(callback: CallbackQuery):
    """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    await cmd_stats(callback.message)
    await callback.answer("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
def get_manager_main_keyboard(is_admin: bool = False) -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
    buttons = [
        [InlineKeyboardButton(text="üü¢ –ù–∞—á–∞—Ç—å —Å–º–µ–Ω—É", callback_data="go_online")],
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="show_stats")],
        [InlineKeyboardButton(text="üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏", callback_data="my_applications")],
    ]
    
    if is_admin:
        buttons.append([InlineKeyboardButton(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_online_keyboard(is_admin: bool = False) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–Ω–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞"""
    buttons = [
        [InlineKeyboardButton(text="üìã –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏", callback_data="new_applications")],
        [InlineKeyboardButton(text="üí¨ –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã", callback_data="active_chats")],
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="show_stats")],
        [InlineKeyboardButton(text="üî¥ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É", callback_data="go_offline")],
    ]
    
    if is_admin:
        buttons.append([InlineKeyboardButton(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_stats_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="refresh_stats")],
        [InlineKeyboardButton(text="üìà –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="detailed_stats")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
@base_router.message()
async def handle_unknown_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user = message.from_user
    telegram_id = str(user.id)
    
    manager = await manager_service.get_manager_by_telegram_id(telegram_id)
    if not manager:
        await message.answer(
            "ü§ñ –≠—Ç–æ –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ILPO-TAXI –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤.\n"
            "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Ç–∞–∫—Å–æ–ø–∞—Ä–∫—É, –ø–æ—Å–µ—Ç–∏—Ç–µ: https://ilpo-taxi.top"
        )
        return
    
    await message.answer(
        "‚ùì –ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
    ) 