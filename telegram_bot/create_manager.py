#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
import sys
import os
sys.path.append('/var/www/ILPO-TAXI.TOP')

from telegram_bot.models.database import AsyncSessionLocal
from telegram_bot.models.support_models import Manager, ManagerStatus
from telegram_bot.config.settings import settings

async def create_manager_from_settings():
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ .env"""
    async with AsyncSessionLocal() as session:
        try:
            # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –¥–ª—è –≤—Å–µ—Ö ID –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            for telegram_id in settings.MANAGER_IDS:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ (–∏—â–µ–º –ø–æ telegram_id, –∞ –Ω–µ –ø–æ id)
                from sqlalchemy import select
                result = await session.execute(
                    select(Manager).where(Manager.telegram_id == telegram_id)
                )
                existing = result.scalar_one_or_none()
                if existing:
                    print(f"‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä {telegram_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    continue
                
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
                manager = Manager(
                    telegram_id=telegram_id,
                    name=f"Manager_{telegram_id}",
                    status=ManagerStatus.ONLINE
                )
                
                session.add(manager)
                print(f"‚ûï –°–æ–∑–¥–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä: {telegram_id}")
            
            await session.commit()
            print("‚úÖ –í—Å–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            
        except Exception as e:
            await session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤: {e}")
            import traceback
            print(f"–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: {traceback.format_exc()}")

async def main():
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    print(f"üìã Manager IDs: {settings.MANAGER_IDS}")
    
    if not settings.MANAGER_IDS:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã ID –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö!")
        return
    
    await create_manager_from_settings()

if __name__ == "__main__":
    asyncio.run(main()) 