"""
–£–ú–ù–´–ô –¢–ê–ö–°–û–ü–ê–†–ö - FastAPI Backend
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º —Ä–æ—É—Ç–µ—Ä–æ–≤ –∏ OpenRouter API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
"""

from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

from fastapi import FastAPI, Request
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from fastapi.middleware.cors import CORSMiddleware
import uvicorn
from datetime import datetime
import os

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
from routers.main_routes import main_router
from routers.chat_routes import chat_router

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI
app = FastAPI(
    title="ILPO-TAXI - –£–º–Ω—ã–π –¢–∞–∫—Å–æ–ø–∞—Ä–∫ API",
    description="API –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —É–º–Ω–æ–≥–æ —Ç–∞–∫—Å–æ–ø–∞—Ä–∫–∞ —Å –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º (OpenRouter + gpt-4o-mini-search-preview)",
    version="2.0.0",
    docs_url="/docs",
    redoc_url="/redoc"
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS –¥–ª—è frontend
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ–º–µ–Ω—ã
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.mount("/static", StaticFiles(directory="static"), name="static")

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —à–∞–±–ª–æ–Ω—ã (–ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –≥–æ—Ç–æ–≤–æ –¥–ª—è –±—É–¥—É—â–µ–≥–æ)
templates = Jinja2Templates(directory=".")

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
app.include_router(main_router, tags=["main"])
app.include_router(chat_router, tags=["chat"])

# Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
@app.middleware("http")
async def log_requests(request: Request, call_next):
    start_time = datetime.now()
    response = await call_next(request)
    process_time = datetime.now() - start_time
    
    print(f"üìä {request.method} {request.url} - {response.status_code} - {process_time.total_seconds():.3f}s")
    return response

# –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ endpoints
@app.get("/api/info")
async def get_api_info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ API"""
    return {
        "name": "ILPO-TAXI –£–º–Ω—ã–π –¢–∞–∫—Å–æ–ø–∞—Ä–∫ API",
        "version": "2.0.0",
        "description": "–ü–µ—Ä–≤—ã–π –≤ –†–æ—Å—Å–∏–∏ —É–º–Ω—ã–π —Ç–∞–∫—Å–æ–ø–∞—Ä–∫ —Å –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º",
        "features": [
            "OpenRouter API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
            "gpt-4o-mini-search-preview –º–æ–¥–µ–ª—å",
            "WebSocket —á–∞—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
            "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏",
            "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤"
        ],
        "endpoints": {
            "chat": "/ws/chat",
            "docs": "/docs",
            "health": "/api/chat/health"
        },
        "ai_model": os.getenv("OPENROUTER_MODEL", "openai/gpt-4o-mini-search-preview"),
        "timestamp": datetime.now().isoformat()
    }

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –£–º–Ω–æ–≥–æ –¢–∞–∫—Å–æ–ø–∞—Ä–∫–∞...")
    print("üì± –°–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000")
    print("ü§ñ WebSocket —á–∞—Ç: ws://localhost:8000/ws/chat")
    print("üìã API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
    print("üß† –ò–ò –º–æ–¥–µ–ª—å:", os.getenv("OPENROUTER_MODEL", "openai/gpt-4o-mini-search-preview"))
    print("üîß –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏:", os.getenv("DEBUG", "True"))
    
    uvicorn.run(
        "main:app",
        host="0.0.0.0",
        port=8000,
        reload=True,
        log_level="info"
    ) 