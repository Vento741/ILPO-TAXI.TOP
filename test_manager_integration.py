#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–µ–±-—á–∞—Ç–∞ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏
"""
import asyncio
import aiohttp
import json
from datetime import datetime

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
TEST_SESSION_ID = f"test_session_{int(datetime.now().timestamp())}"
TEST_BASE_URL = "http://localhost"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL

async def test_manager_transfer():
    """–¢–µ—Å—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞...")
    
    async with aiohttp.ClientSession() as session:
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
        chat_history = [
            {
                "role": "user",
                "content": "–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –Ø–Ω–¥–µ–∫—Å.–¢–∞–∫—Å–∏",
                "timestamp": datetime.now().isoformat()
            },
            {
                "role": "assistant", 
                "content": "–ü—Ä–∏–≤–µ—Ç! –ü–æ–º–æ–≥—É —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –Ø–Ω–¥–µ–∫—Å.–¢–∞–∫—Å–∏. –ö–∞–∫–∏–µ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?",
                "timestamp": datetime.now().isoformat()
            },
            {
                "role": "user",
                "content": "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã?",
                "timestamp": datetime.now().isoformat()
            }
        ]
        
        # –¢–µ—Å—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        transfer_data = {
            "session_id": TEST_SESSION_ID,
            "chat_history": chat_history,
            "client_name": "–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤–∏—á",
            "client_phone": "+79991234567"
        }
        
        try:
            async with session.post(
                f"{TEST_BASE_URL}/api/chat/transfer-to-manager",
                json=transfer_data
            ) as response:
                result = await response.json()
                
                if result.get("success"):
                    print(f"‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
                    print(f"   –ú–µ–Ω–µ–¥–∂–µ—Ä: {result.get('manager_name')}")
                    print(f"   Chat ID: {result.get('chat_id')}")
                    print(f"   Support Chat ID: {result.get('support_chat_id')}")
                    
                    return result.get('chat_id')
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è: {result.get('error')}")
                    print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {result.get('message')}")
                    return None
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            return None

async def test_send_message(chat_id: str):
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É"""
    if not chat_id:
        print("‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è - –Ω–µ—Ç chat_id")
        return
        
    print("\nüì® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É...")
    
    async with aiohttp.ClientSession() as session:
        message_data = {
            "chat_id": chat_id,
            "message_text": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –≤–µ–±-–∫–ª–∏–µ–Ω—Ç–∞. –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –≤ Telegram!",
            "client_name": "–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤–∏—á"
        }
        
        try:
            async with session.post(
                f"{TEST_BASE_URL}/api/chat/send-message",
                json=message_data
            ) as response:
                result = await response.json()
                
                if result.get("success"):
                    print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É!")
                    print(f"   –û—Ç–≤–µ—Ç: {result.get('message')}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {result.get('error')}")
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ ILPO-TAXI\n")
    
    # –¢–µ—Å—Ç 1: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    chat_id = await test_manager_transfer()
    
    # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
    await asyncio.sleep(2)
    
    # –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    await test_send_message(chat_id)
    
    print("\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –ß—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Ä—É—á–Ω—É—é:")
    print("1. –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram")
    print("2. –ú–µ–Ω–µ–¥–∂–µ—Ä –º–æ–∂–µ—Ç –ø—Ä–∏–Ω—è—Ç—å —á–∞—Ç —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏")
    print("3. –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—É—á–∏–ª —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    print("4. –ú–µ–Ω–µ–¥–∂–µ—Ä –º–æ–∂–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–π–¥–µ—Ç –¥–æ –≤–µ–±-–∫–ª–∏–µ–Ω—Ç–∞")

if __name__ == "__main__":
    print("‚ö†Ô∏è  –£–ë–ï–î–ò–¢–ï–°–¨, –ß–¢–û:")
    print("1. –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (python main.py)")
    print("2. Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω (python telegram_bot/main.py)")
    print("3. –í —Å–∏—Å—Ç–µ–º–µ –µ—Å—Ç—å –æ–Ω–ª–∞–π–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—ã")
    print("4. PostgreSQL –∏ Redis —Ä–∞–±–æ—Ç–∞—é—Ç")
    print()
    
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}") 