/**
 * НАСТРОЙКА ЦЕЛЕЙ ЯНДЕКС МЕТРИКИ
 * Инструкции и код для настройки целей и Вебвизора
 */

// Этот файл содержит инструкции по настройке целей в Яндекс Метрике
// и примеры кода для отслеживания событий на сайте

/**
 * ИНСТРУКЦИЯ ПО НАСТРОЙКЕ ЦЕЛЕЙ В ЯНДЕКС МЕТРИКЕ
 * 
 * 1. Войдите в Яндекс Метрику (https://metrika.yandex.ru/)
 * 2. Выберите счетчик вашего сайта (ID: 101852978)
 * 3. Перейдите в раздел "Цели" в левом меню
 * 4. Нажмите кнопку "Добавить цель"
 * 5. Заполните форму создания цели:
 *    - Название: укажите понятное название цели
 *    - Тип условия: выберите подходящий тип (JavaScript-событие, Посещение страницы и т.д.)
 *    - Условие: укажите условие срабатывания цели
 * 6. Нажмите "Добавить цель"
 */

/**
 * РЕКОМЕНДУЕМЫЕ ЦЕЛИ ДЛЯ НАСТРОЙКИ
 * 
 * 1. ОТПРАВКА ФОРМЫ ЗАЯВКИ
 *    - Название: "Отправка заявки"
 *    - Тип условия: JavaScript-событие
 *    - Идентификатор цели: FORM_SUBMIT
 * 
 * 2. УСПЕШНАЯ ОТПРАВКА ФОРМЫ
 *    - Название: "Успешная отправка заявки"
 *    - Тип условия: JavaScript-событие
 *    - Идентификатор цели: FORM_SUBMIT_SUCCESS
 * 
 * 3. КЛИК ПО ТЕЛЕФОНУ
 *    - Название: "Клик по телефону"
 *    - Тип условия: JavaScript-событие
 *    - Идентификатор цели: PHONE_CLICK
 * 
 * 4. ОТКРЫТИЕ ЧАТА
 *    - Название: "Открытие чата"
 *    - Тип условия: JavaScript-событие
 *    - Идентификатор цели: CHAT_OPEN
 * 
 * 5. КЛИК ПО КНОПКЕ РЕГИСТРАЦИИ
 *    - Название: "Клик по кнопке регистрации"
 *    - Тип условия: JavaScript-событие
 *    - Идентификатор цели: SIGNUP_CLICK
 * 
 * 6. ИСПОЛЬЗОВАНИЕ КАЛЬКУЛЯТОРА
 *    - Название: "Использование калькулятора"
 *    - Тип условия: JavaScript-событие
 *    - Идентификатор цели: CALCULATOR_USE
 * 
 * 7. ПЕРЕХОД К МЕНЕДЖЕРУ
 *    - Название: "Переход к менеджеру"
 *    - Тип условия: JavaScript-событие
 *    - Идентификатор цели: MANAGER_TRANSFER
 * 
 * 8. ПОСЕЩЕНИЕ СТРАНИЦЫ РЕГИСТРАЦИИ
 *    - Название: "Посещение страницы регистрации"
 *    - Тип условия: Посещение страницы
 *    - Условие: URL содержит /signup
 * 
 * 9. ВРЕМЯ НА САЙТЕ БОЛЕЕ 3 МИНУТ
 *    - Название: "Время на сайте более 3 минут"
 *    - Тип условия: Продолжительность визита
 *    - Условие: ≥ 180 секунд
 * 
 * 10. ПРОСМОТР БОЛЕЕ 3 СТРАНИЦ
 *    - Название: "Просмотр более 3 страниц"
 *    - Тип условия: Количество просмотров
 *    - Условие: ≥ 3 страницы
 */

/**
 * НАСТРОЙКА ВЕБВИЗОРА
 * 
 * Вебвизор уже включен в коде счетчика Яндекс Метрики на вашем сайте:
 * 
 * ym(101852978, "init", {
 *     clickmap: true,
 *     trackLinks: true,
 *     accurateTrackBounce: true,
 *     webvisor: true,
 *     trackHash: true,
 *     ecommerce: "dataLayer",
 *     yandexBot: true
 * });
 * 
 * Для просмотра записей Вебвизора:
 * 1. Войдите в Яндекс Метрику
 * 2. Перейдите в раздел "Вебвизор" в левом меню
 * 3. Выберите запись для просмотра
 * 
 * Рекомендации по использованию Вебвизора:
 * - Регулярно просматривайте записи для выявления проблем с юзабилити
 * - Обратите внимание на поведение пользователей при заполнении формы
 * - Анализируйте, на каких этапах пользователи покидают сайт
 * - Используйте фильтры для поиска конкретных сценариев поведения
 */

/**
 * ДОПОЛНИТЕЛЬНЫЙ КОД ДЛЯ ОТСЛЕЖИВАНИЯ СОБЫТИЙ
 * 
 * Ниже приведены примеры кода для отслеживания дополнительных событий,
 * которые можно добавить на сайт для более детального анализа.
 */

// Отслеживание отправки формы заявки
function trackFormSubmit(formData) {
    if (typeof ym !== 'undefined') {
        ym(101852978, 'reachGoal', 'FORM_SUBMIT', {
            'category': formData.category,
            'source': 'website'
        });
    }
}

// Отслеживание успешной отправки формы
function trackFormSuccess() {
    if (typeof ym !== 'undefined') {
        ym(101852978, 'reachGoal', 'FORM_SUBMIT_SUCCESS', {
            'source': 'website'
        });
    }
}

// Отслеживание выбора категории в форме регистрации
function trackCategorySelect(category) {
    if (typeof ym !== 'undefined') {
        ym(101852978, 'reachGoal', 'CATEGORY_SELECT', {
            'category': category,
            'source': 'signup_form'
        });
    }
}

// Отслеживание прогресса заполнения формы
function trackFormProgress(step, completed) {
    if (typeof ym !== 'undefined') {
        ym(101852978, 'reachGoal', 'FORM_PROGRESS', {
            'step': step,
            'completed': completed,
            'source': 'signup_form'
        });
    }
}

// Отслеживание ошибок валидации формы
function trackFormValidationError(fieldName, errorMessage) {
    if (typeof ym !== 'undefined') {
        ym(101852978, 'reachGoal', 'FORM_VALIDATION_ERROR', {
            'field': fieldName,
            'error': errorMessage,
            'source': 'signup_form'
        });
    }
}

/**
 * ИНТЕГРАЦИЯ С СУЩЕСТВУЮЩИМ КОДОМ
 * 
 * Для интеграции этих функций с существующим кодом,
 * добавьте вызовы функций в соответствующие места.
 * 
 * Например, для отслеживания отправки формы добавьте в функцию handleFormSubmit:
 * 
 * async function handleFormSubmit(e) {
 *     e.preventDefault();
 *     
 *     // Собираем данные формы
 *     const formData = collectFormData(form);
 *     
 *     // Отслеживаем событие отправки формы
 *     trackFormSubmit(formData);
 *     
 *     // ... остальной код функции
 *     
 *     if (result.success) {
 *         // Отслеживаем успешную отправку формы
 *         trackFormSuccess();
 *         // ... остальной код
 *     }
 * }
 */